version: '3' # версия docker compose

services: # описание сервисов (контейнеров, которые будем использовать)  

  apache: # имя контейнера, будет состоять из имени папки проекта + имя сервиса (example, docker-lamp-apache-1)
    image: httpd:2.4 # имя образа
    ports:
      - 8081:80
    restart: always
    # монтируем директории, слева директории на основной машине, справа - куда они монтируются в контейнере
    volumes:
      - ./app:/var/www/html # все внутри папки /app будет доступно в папке контейнера apache /var/www/html
      - ./webserver/httpd/httpd.conf:/usr/local/apache2/conf/httpd.conf # аналогично с настройками конфига для apache
      - ./webserver/httpd/logs:/var/log/apache2
      #- ./webserver/httpd/vhosts/apache-hosts.conf:/etc/apache2/sites-available/example-apache.conf
    depends_on:
      - wordpress
      - php # указываем зависимость от php, чтобы контейнер php запустился раньше и не было ошибок
    networks:
      - app-network

  nginx:
    image: nginx:1.15.12-alpine
    links:
      - php
    ports: # пробрасываем порт 8080 нашей машины слушать порт 80 из контейнера
      - 8000:80
      #- 443:443
    restart: always
    volumes:
      - ./app:/var/www/html
      #- ./var/run/docker.sock:/tmp/docker.sock:ro
      #- ./hosts:/etc/nginx/conf.d
     # - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./webserver/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./webserver/nginx/logs:/var/log/nginx
    depends_on:
      - wordpress
      - apache      
    networks:
      - app-network

  php:
    build:
      ./docker/images/ubuntu
    image: php:7.4-fpm
      # этот образ будет общаться с mysql
    links:
      - db
    volumes:
      - ./app:/var/www/html
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    volumes:
      #- ./etc/mysql:/etc/mysql
      - ./database/logs:/var/log/mysql
      #- ./mysql-files:/var/lib/mysql-files
    # если в локальую папку, которая мапится на /docker-entrypoint-initdb.d,
    #положить sql или bash файлы, то они будут выполнены после разворачивания mysql
      - ./data:/docker-entrypoint-initdb.d
      - dbdata:/var/lib/mysql
    networks:
      - app-network
    command: [
      '--default_authentication_plugin=mysql_native_password',
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci'
    ]

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 12700:80
    environment:
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - db
    networks:
      - app-network

  wordpress:
    depends_on:
      - db
      - ngingx
    image: wordpress:6.1-fpm-alpine
    restart: always
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: admin
      WORDPRESS_DB_PASSWORD: admin
      WORDPRESS_DB_NAME: wordpress
    volumes:
      - wordpress:/var/www/html
    networks:
      - app-network

volumes:
  wordpress:
  dbdata:

networks:
  app-network:
    driver: bridge